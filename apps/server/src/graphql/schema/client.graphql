type Client implements Node {
  id: ID!
  name: String!
  email: String!
  phone: String!
  user: User!
}

type ClientEdge {
  node: Client!
  cursor: String!
}

type ClientConnection {
  edges: [ClientEdge]!
  pageInfo: PageInfo!
}

input ClientFilter {
  name: String
  email: String
  phone: String
  user: ID
}

input ClientInput {
  name: String!
  email: String!
  phone: String!
  user: ID!
}

type Query {
  clients(filter: ClientFilter): ClientConnection!
  client(id: ID!): Client
  clientCount(user: ID): Int!
}

type Mutation {
  createClient(input: ClientInput!): Client!
  updateClient(id: ID!, input: ClientInput!): Client!
  deleteClient(id: ID!): String!
}
